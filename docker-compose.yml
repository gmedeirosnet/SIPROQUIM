version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: estoque_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - php
    networks:
      - estoque_network
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: estoque_certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - estoque_network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  php:
    image: php:8.4-apache
    container_name: estoque_php
    volumes:
      - ./src:/var/www/html
      - ./src/php.ini:/usr/local/etc/php/conf.d/custom.ini
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_NAME=estoque
      - DB_USER=admin
      - DB_PASSWORD=password
      - DB_PORT=5432
      - PHP_INI_SCAN_DIR=/usr/local/etc/php/conf.d
    ports:
      - "8080:80"
    command: >
      bash -c "apt-get update && apt-get install -y libpq-dev libzip-dev zip unzip &&
      docker-php-ext-install pdo pdo_pgsql zip &&
      a2enmod rewrite &&
      chmod +x /var/www/html/config/sql.sh &&
      apache2-foreground"
    networks:
      - estoque_network
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: estoque_db
    restart: always
    environment:
      POSTGRES_DB: estoque
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - estoque_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d estoque"]
      interval: 5s
      timeout: 5s
      retries: 5

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: estoque_pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   ports:
  #     - "5050:5050"
  #   depends_on:
  #     - db
  #   networks:
  #     - estoque_network
  #  restart: unless-stopped

volumes:
  postgres_data:

networks:
  estoque_network:
    driver: bridge
