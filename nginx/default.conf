server {
    listen 80;
    server_name siproquim.gmedeiros.net;

    # For Let's Encrypt certificate validation
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS Server
server {
    listen 443 ssl;
    server_name siproquim.gmedeiros.net;

    # SSL Certificate Configuration with fallback to self-signed certificates
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;

    # These files will be used when they become available
    # After obtaining Let's Encrypt certificates, uncomment these lines and comment the ones above
    # # # ssl_certificate /etc/letsencrypt/live/siproquim.gmedeiros.net/fullchain.pem;
    # # # ssl_certificate_key /etc/letsencrypt/live/siproquim.gmedeiros.net/privkey.pem;
    # # # ssl_trusted_certificate /etc/letsencrypt/live/siproquim.gmedeiros.net/chain.pem;

    # SSL Settings
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

    # OCSP Stapling - disabled until proper certificates are in place
    # # # ssl_stapling on;
    # # # ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Add HSTS header
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Load balancer configuration
    location / {
        proxy_pass http://php:80;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Add health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
    }
}
